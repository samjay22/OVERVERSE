--!strict
-- Shifter character with custom ShiftState
local Players = game:GetService("Players")

local NetworkServer = require(game.ServerStorage.Modules.Core.NetworkServer)
local CharacterTypes = require(game.ServerStorage.Modules.Types.CharacterTypes)

local def: CharacterTypes.CharacterDefinition = {
	id = "Rem",
	displayName = "Rem-Ram",
	initialStates = {
		ShiftState = { default = "Rem", validator = function(v)
			return v == "Rem" or v == "Ram"
		end },
	},
	-- Map form/state -> Loadout assetKey from Loadouts registry
	loadoutMapping = {
		Rem = "Rem",
		Ram = "Ram",
		Default = "Rem",
	},
	customFields = {
		ShiftDuration = 10, -- seconds
		LastShiftTime = 0,
	},
	hooks = {
		onInit = function(character : CharacterTypes.Character)
			character.StateManager:Set("ShiftState", "Rem")
			NetworkServer:FireClient("SetCharacter", Players:GetPlayerByUserId(character.PlayerId), "Rem")
			warn("init rem")
		end,
		onUpdate = function(character, dt)
			-- Example: auto revert after duration when in Beast
			local state = character.StateManager:Get("ShiftState")
			if state == "Ram" then
				local last = character.Custom.LastShiftTime or 0
				local dur = character.Custom.ShiftDuration or 10
				if time() - last > dur then
					character.StateManager:Set("ShiftState", "Rem")
				end
			end
		end,
	},
}

return def
